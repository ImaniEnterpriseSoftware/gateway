apiVersion: v1
kind: Namespace
metadata:
  name: imani-indv
  labels:
    name: imani-indv
---
apiVersion: v1
kind: Service
metadata:
  name: indv-gateway
  namespace: imani-indv
  labels:
    app: indv-gateway
    tier: backend
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 8080
  selector:
    app: indv-gateway
    tier: backend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: indv-gateway
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: indv-gateway
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: indv-gateway
        tier: backend
    spec:
      containers:
        - name: indv-gateway
          image: registry.hub.docker.com/imanileemans/gateway
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: description-cud
  namespace: imani-indv
  labels:
    app: description-cud
    tier: backend
spec:
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: description-cud
    tier: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: description-cud
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: description-cud
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: description-cud
        tier: backend
    spec:
      containers:
        - name: description-cud
          image: registry.hub.docker.com/imanileemans/description-cud
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: description-r
  namespace: imani-indv
  labels:
    app: description-r
    tier: backend
spec:
  ports:
    - port: 8082
      targetPort: 8082
  selector:
    app: description-r
    tier: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: description-r
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: description-r
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: description-r
        tier: backend
    spec:
      containers:
        - name: description-r
          image: registry.hub.docker.com/imanileemans/description-r
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: imani-indv
  labels:
    app: user-service
    tier: backend
spec:
  ports:
    - port: 8083
      targetPort: 8083
  selector:
    app: user-service
    tier: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: user-service
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: user-service
        tier: backend
    spec:
      containers:
        - name: user-service
          image: registry.hub.docker.com/imanileemans/user-service
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
---
apiVersion: v1
kind: Service
metadata:
  name: description-mysql
  namespace: imani-indv
  labels:
    app: description-mysql
    tier: backend
spec:
  selector:
    app: description-mysql
  ports:
    - protocol: TCP
      name: "3307"
      port: 3307
      targetPort: 3307
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: description-mysql
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: description-mysql
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: description-mysql
        tier: backend
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3307
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: m@nipassword
            - name: MYSQL_TCP_PORT
              value: "3307"
            - name: MYSQL_DATABASE
              value: descriptiondb
---
apiVersion: v1
kind: Service
metadata:
  name: database-user
  namespace: imani-indv
  labels:
    app: database-user
    tier: backend
spec:
  selector:
    app: database-user
  ports:
    - protocol: TCP
      name: "3308"
      port: 3308
      targetPort: 3308
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-user
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: database-user
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: database-user
        tier: backend
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3308
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: m@nipassword
            - name: MYSQL_TCP_PORT
              value: "3308"
            - name: MYSQL_DATABASE
              value: userdb
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: imani-indv
  labels:
    app: rabbitmq
    tier: backend
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: imani-indv
spec:
  selector:
    matchLabels:
      app: rabbitmq
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
        tier: backend
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:latest
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 15672
              name: management
          env:
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
            - name: RABBITMQ_DEFAULT_USER
              value: guest
